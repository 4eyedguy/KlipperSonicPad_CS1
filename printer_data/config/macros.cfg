## LIST OF MACROS FOR KLIPPER ##

[gcode_macro LOAD_FILAMENT]
variable_load_distance:  50
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  50
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E{purge_distance} F{speed} # purge
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####

  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}

  RESUME_BASE {get_params}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg

  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true

  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}

  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

#[gcode_macro G29]				#界面中增加G29指令
#gcode:
#  G28
#  bed_mesh_calibrate
#  G1 X0 Y0 Z10 F4200
#  # save_config

[gcode_macro BED_LEVEL]
gcode:
    G28
    BED_MESH_CALIBRATE

[gcode_macro Z_AXI_CALIBRATE]
gcode:
    G28
    PROBE_CALIBRATE

[gcode_macro SHAPER]
gcode:
    G28
    SHAPER_CALIBRATE

[gcode_macro PID]
gcode:
    G28
    PID_CALIBRATE HEATER=extruder TARGET=200
    PID_CALIBRATE HEATER=heater_bed TARGET=60

[gcode_macro Press_Advance_short]
gcode:
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=1 ACCEL=500
    TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=0 FACTOR=.005

[gcode_macro Press_Advance_long]
gcode:
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=1 ACCEL=500
    TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=0 FACTOR=.020

# My Bed Stuff
[gcode_macro BED_TRAMMING_1]
gcode:
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  M140 S{BED_TEMP}	
  G28
  M190 S{BED_TEMP}
  SCREWS_TILT_CALCULATE
 
[gcode_macro BED_TRAMMING_2]
gcode:
  SCREWS_TILT_CALCULATE
 
[gcode_macro BED_MESH]
gcode:
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  M140 S{BED_TEMP}
  G28
  M190 S{BED_TEMP}
  BED_MESH_CLEAR
  BED_MESH_CALIBRATE
  TURN_OFF_HEATERS
  SAVE_CONFIG

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z4.5 F300
    G90
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}
    G28 X Y
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    G1 Y{y_park} F2000
    M84
  CANCEL_PRINT_BASE

[gcode_macro Unload]
gcode:
; Unload filament
  G28
  G1 Z25 F360
  G1 X165 Y165 F7200
  M109 S230
  G91 ; Set positioning to Relative
  G1 E5 F120
  G1 E-605 F3600
  G1 E-50 F360
  G92 E0 ; Reset Extruder
  G1 X0 Y0 ; Park print head
  M106 S0 ; Turn off part fan
  M104 S0 ; Set nozzle temp to zero
  M140 S0 ; set bed temp to zero
  M84 X Y E ; Disable X Y and E

[gcode_macro Load]
gcode:
; Load filament
  G28
  G1 Z25 F360
  G1 X165 Y165 F7200
  M109 S230
  G92 E0
  G91 ; Set positioning to Relative
  G1 E600 F3600
  G1 E50 F360
  G92 E0 ; Reset Extruder
  G1 X0 Y0 ; Park print head
  M106 S0 ; Turn off part fan
  M104 S0 ; Set nozzle temp to zero
  M140 S0 ; set bed temp to zero
  M84 X Y E ; Disable X Y and E steppers

[gcode_macro START_PRINT]
gcode:
  CLEAR_PAUSE # Suggested by Klipper manual in case you have done a cancel after a pause
  #GCODE_OFFSET_ENDER # Set z-offset, the macro name is generic, but defined at printer level (Ender3v2 or Ender5 folder)
  #SET_FLOW_ENDER # Set printer/material flow

  # Get printer build volume dimensions
  {% set X_MAX = printer.toolhead.axis_maximum.x|default(230)|float %}
  {% set Y_MAX = printer.toolhead.axis_maximum.y|default(222)|float %} # -10 for bed clip
  {% set Z_MAX = printer.toolhead.axis_maximum.z|default(225)|float %}
  RESPOND MSG="Printer dimensions X,Y, Z: {X_MAX, Y_MAX, Z_MAX}"
  # Get nozzle diameter and filament width for conditioning
  {% set NOZZLE_DIAMETER = printer.extruder.nozzle_diameter|default(0.4)|float %}
  {% set FILAMENT_DIAMETER = printer.extruder.filament_diameter|default(1.75)|float %}
  # Get bed and extruder temperature from slicer
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
  # Set start coordinates of priming lines
  {% set X_START = 3.0|float %}
  {% set Y_START = 20.0|float %}
  # Calculate primer line extrusion volume and filament length
  {% set PRIMER_WIDTH = 0.75 * NOZZLE_DIAMETER %}
  {% set PRIMER_HEIGHT = 0.70 * NOZZLE_DIAMETER %}
  {% set PRIMER_SECT = PRIMER_WIDTH * PRIMER_HEIGHT %}
  {% set PRIMER_VOL = PRIMER_SECT * (X_MAX - 3 * X_START) %}
  {% set FILAMENT_SECT = 3.1415 * ( FILAMENT_DIAMETER / 2.0)**2 %}
  {% set FILAMENT_LENGTH = 1.55 * PRIMER_VOL / FILAMENT_SECT %}
  RESPOND MSG="Calculated primer values for width, height and length: {PRIMER_WIDTH, PRIMER_HEIGHT, FILAMENT_LENGTH}"
  M140 S{BED_TEMP} # Heat bed
  M190 S{BED_TEMP} # Wait for bed to reach temperature
  G28 # Home the printer

  M117 Measuring mesh
  BED_MESH_CLEAR
  #### Always pass `ADAPTIVE_MARGIN=0` because Orca has already handled `adaptive_bed_mesh_margin` internally
  #### Make sure to set ADAPTIVE to 0 otherwise Klipper will use it's own adaptive bed mesh logic
  #BED_MESH_CALIBRATE mesh_min={adaptive_bed_mesh_min[0]},{adaptive_bed_mesh_min[1]} mesh_max={adaptive_bed_mesh_max[0]},{adaptive_bed_mesh_max[1]} ALGORITHM=[bed_mesh_algo] PROBE_COUNT={bed_mesh_probe_count[0]},{bed_mesh_probe_count[1]} ADAPTIVE=0 ADAPTIVE_MARGIN=0
  BED_MESH_CALIBRATE ADAPTIVE=1 ADAPTIVE_MARGIN=0
  BED_MESH_PROFILE LOAD=default # Load the default manual mesh (is typically done automatically, but just to be sure
  M117 Complete

  #G90 # Absolute positioning
  #G1 Y{Y_MAX - 20} Z{Z_MAX / 4.0} F6000 # Move nozzle up to be able to make bed clean
  M104 S{EXTRUDER_TEMP} # Heat nozzle (after homing)

  #SET_SKEW CLEAR=1 # Disable skew correction before printing close to the bed border
  G1 Z20.0 F3000 # Move Z Axis up to prevent bed scratching and creating a hole in the surface, also allows cleaning
  G1 X{X_START} F5000.0 # Move to CURA start position via x and y border to prevent oozing on middle of print surface
  G1 X{X_START} Y{Y_START} F5000.0
  {% if Z_MAX <= 250 %} # Test if printer is Ender5Pro (Z_MAX > 250) or Ender3v2
  #G1 Z0.0 F3000 # Move to Z0 to prevent oozing while waiting for full heat up ONLY FOR GLASS BED Ender3v2
  {% endif %}
  #M190 S{BED_TEMP} # Wait for bed to reach temperature //commented out because I want it to heat the bed and then mesh.
  
  M117 Preheating nozzle to temperature
  M109 S{EXTRUDER_TEMP} # Wait for nozzle to reach temperature

  G92 E0 # Reset extruder
  M117 Purge
  G1 X{X_START} Y{Y_START} Z{PRIMER_HEIGHT} F5000.0 # Move to start prime position
  G1 X{X_START} Y{Y_MAX - (2 * Y_START)} Z{PRIMER_HEIGHT} E{FILAMENT_LENGTH} F1500.0 # Draw the first line
  G1 X{X_START + PRIMER_WIDTH} Y{Y_MAX - (2 * Y_START)} Z{PRIMER_HEIGHT} F5000.0 # Move to side a little
  G1 X{X_START + PRIMER_WIDTH} Y{Y_START} Z{PRIMER_HEIGHT} E{FILAMENT_LENGTH * 3} F1500.0 # Draw the second line - maybe LENGHT * 2 like CURA?
  #SKEW_PROFILE LOAD=skewJos # Enable skew correction
  #G10 # This is default firmware retract distance
  #G4 P2000 # Pause (dwell) for 2 seconds
  #G11 # Unretract
  G92 E0 # Reset extruder
  G1 Z2.0 F600 # Move Z axis up, other steps for wiggle off something??
  G1 Z0.2 F600
  G1 Z2.0 F600
  M117 Print Started

[gcode_macro END_PRINT]
gcode:
  #Get Printer built volume dimensions
  {% set X_MAX = printer.toolhead.axis_maximum.x|default(100)|float %}
  {% set Y_MAX = printer.toolhead.axis_maximum.y|default(100)|float %}
  #Fix-up extruder
  G91 # Relative mode
  G1 E-2 F2700
  G1 E-1.5 Z0.2 F2400
  G1 X5 Y5 F6000
  G1 Z10
  G90 # Absolute mode
  G1 Z{printer.toolhead.position.z + 10} F600 # Present print
  G1 X{X_MAX / 2} Y{Y_MAX} F6000
  M106 S0 # Turn-off fan
  M104 S0 # Turn-off hotend
  M140 S0 # Turn-off bed
  M84 X Y E # Disable Steppers
  #SET_SKEW CLEAR=1 # Disable skew correction